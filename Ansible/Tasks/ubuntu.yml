- hosts: LocalMachine
  connection: local
  tasks:

# Apt Packages

    - name: Install All Packages
      apt:
       pkg: 
       - nodejs
       - npm
       - openssh-server
       - sshpass
       - docker.io
       - default-jre

#    - name: Install Angular CLI 
#      shell: npm install -g "@angular/cli"

# Jenkins Container

    - name: Jenkins - Get Container Info
      docker_container_info:
       name: jenkins_container
      register: jenkinsresult
      

    - name: Jenkins - Show Container State If Exists
      debug:
       msg: "The Jenkins Container Is {{ jenkinsresult.container['State']['Status'] }}"
      when: jenkinsresult.exists

    - name: Jenkins - Create And Start Container If Not Exist
      shell: |
       cd ../../ContainerScripts/
       ./jenkins.sh
      when: jenkinsresult.exists == False

    - name: Jenkins - Start Container If Not Running
      shell: docker start jenkins_container
      when: jenkinsresult.container['State']['Status'] != 'running'

# Check MK Container

    - name: Check-mk - Get Container Info
      docker_container_info:
       name: monitoring_container
      register: monitoringresult

    - name: Check-mk - Show Container State If Exists
      debug:
       msg: "The Check_mk Container Is {{ monitoringresult.container['State']['Status'] }}"
      when: monitoringresult.exists

    - name: Check-mk - Create And Start Container If Not Exist
      shell: |
       cd ../../ContainerScripts/
       ./check_mk.sh
      when: monitoringresult.exists == False

    - name: Check-mk - Start Container If Not Running
      shell: docker start monitoring_container
      when: monitoringresult.container['State']['Status'] != 'running'

# ELK Container

    - name: ELK - Get Container Info
      docker_container_info:
       name: elk_container
      register: elkresult

    - name: ELK - Show Container State If Exist
      debug:
       msg: "The ELK Container Is {{ elkresult.container['State']['Status'] }}"
      when: elkresult.exists

    - name: ELK - Create And Start Container If Not Exist
      shell: |
       cd ../../ContainerScripts/
       ./ELK.sh
      when: elkresult.exists == False

    - name: ELK - Start Container If Not Running
      shell: docker start elk_container
      when: elkresult.container['State']['Status'] != 'running'
